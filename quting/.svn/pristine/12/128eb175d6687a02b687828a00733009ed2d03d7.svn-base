package com.example.quting;
import java.util.ArrayList;

import com.example.quting.database.SqlLiteUtil;
import com.example.quting.entity.media.MediaBaseEntity;
import com.example.quting.utils.BitmapTool;
import com.example.quting.utils.ViewOnClickedListener;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.TextView;

public class GridAdapter extends BaseAdapter {
	
	 private LayoutInflater mInflater;                 
	 private Context context;                 
	 
	 private MediaBaseEntity mediaBaseEntity;
	 private ArrayList<MediaBaseEntity> mediaBaseEntityList;  
	 
	 public GridAdapter(Context context){
		 this.context = context;
		 
		 mediaBaseEntityList = SqlLiteUtil.getDingyue(); // 从数据库中查询出 已经订阅的实体 集合
		 mInflater = (LayoutInflater)context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
	 }
	 
	 //类别封面 从收藏里面 查询出来的
//     private Integer[] mImageIds = {  
//        R.drawable.thumb2
//     };  
     
     //类别的文字 从收藏里面 查询出来的
     private Integer[] leibie_names = {  
    	R.string.fav
     };  
	 
	@Override
	public int getCount() {
		return mediaBaseEntityList.size()+1;
	}

	@Override
	public Object getItem(int position) {
		return mediaBaseEntityList.get(position);
	}

	@Override
	public long getItemId(int position) {
		return position;
	}

	@Override
	public View getView(int position, View convertView, ViewGroup parent) {
		View view = null;
        if (convertView != null) {
            view = convertView;
        } else {
            view = mInflater.inflate(R.layout.grid_item, null);
        }
        
        ImageView iv_header = (ImageView) view.findViewById(R.id.iv_header);
        TextView leibieView = (TextView)view.findViewById(R.id.lei_name);
        Bitmap bitmap = null;
        if (position == 0) {  // 默认有我的最爱
        	//图片圆形处理
            bitmap = BitmapTool.toRoundBitmap((BitmapFactory.decodeResource(context.getResources(),R.drawable.thumb2)));
            leibieView.setText(leibie_names[0]);
        }else if(position > 0){
        	Log.i("positionposition", ""+position+"  "+mediaBaseEntityList.size());
			mediaBaseEntity = mediaBaseEntityList.get(position-1);  // 从0开始查询  position 此时是1 
			// 判断是否在sdcard 下存在 
			String imgPath = mediaBaseEntity.getImagepath();
			Log.i("positionposition", ""+position+"  "+imgPath+"   "+mediaBaseEntity);
			if (mediaBaseEntity !=null) {
				if (imgPath != null) {
					bitmap = BitmapFactory.decodeFile(imgPath);
				}else {  // 从网络中获取
					
				}
				leibieView.setText(mediaBaseEntity.getName());
			}
		}
        
        iv_header.setImageBitmap(bitmap);
        ImageView play_s = (ImageView) view.findViewById(R.id.play_state);
        //play_s.setOnClickListener(new ViewOnClickedListener(context,position));
        
		return view;
	}

}
